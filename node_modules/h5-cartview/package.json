{
  "_args": [
    [
      "h5-cartview@github:eleme/h5-cartview#0.4.1",
      "/Users/renguanghui/rgh/h5-js"
    ]
  ],
  "_from": "eleme/h5-cartview#0.4.1",
  "_id": "h5-cartview@0.4.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/h5-cartview",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/eleme/h5-cartview/0.4.1/package.json",
      "gitUrl": "git://github.com/eleme/h5-cartview.git#0.4.1",
      "httpsUrl": "git+https://github.com/eleme/h5-cartview.git#0.4.1",
      "shortcut": "github:eleme/h5-cartview#0.4.1",
      "ssh": "git@github.com:eleme/h5-cartview.git#0.4.1",
      "sshUrl": "git+ssh://git@github.com/eleme/h5-cartview.git#0.4.1",
      "type": "github"
    },
    "name": "h5-cartview",
    "raw": "h5-cartview@github:eleme/h5-cartview#0.4.1",
    "rawSpec": "github:eleme/h5-cartview#0.4.1",
    "scope": null,
    "spec": "github:eleme/h5-cartview#0.4.1",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@github.com/eleme/h5-cartview.git#6b25360906a64c6933ebb1d0d369d8bc92f24889",
  "_shasum": "1feb7331a33e07b89805be21b869ac31fcf77f77",
  "_shrinkwrap": null,
  "_spec": "h5-cartview@github:eleme/h5-cartview#0.4.1",
  "_where": "/Users/renguanghui/rgh/h5-js",
  "author": {
    "name": "eleme"
  },
  "dependencies": {},
  "description": "Cart view for h5.",
  "devDependencies": {
    "babel-cli": "^6.3.15",
    "babel-core": "^6.3.15",
    "babel-loader": "^6.2.0",
    "babel-plugin-transform-runtime": "^6.3.13",
    "babel-preset-es2015": "^6.3.13",
    "css-loader": "^0.23.1",
    "eslint": "^1.10.3",
    "eslint-loader": "^1.1.1",
    "file-loader": "^0.8.5",
    "postcss-cssnext": "^2.5.1",
    "postcss-flex-fallback": "^0.1.0",
    "postcss-px2rem": "^0.2.0",
    "style-loader": "^0.13.0",
    "svg-sprite-loader": "0.0.21",
    "svgo": "^0.6.6",
    "svgo-loader": "^1.1.0",
    "url-loader": "^0.5.7",
    "vue-hot-reload-api": "^1.2.2",
    "vue-html-loader": "^1.0.0",
    "vue-loader": "^7.3.0",
    "webpack": "^1.12.9",
    "webpack-dev-server": "^1.14.0"
  },
  "gitHead": "6b25360906a64c6933ebb1d0d369d8bc92f24889",
  "license": "ISC",
  "main": "dist/h5-cartview.js",
  "name": "h5-cartview",
  "optionalDependencies": {},
  "peerDependencies": {
    "vue": "^1.0.10",
    "web-cart": "github:eleme/web-cart#0.0.3"
  },
  "readme": "# h5 泛用型购物车\n## Install\n使用 npm 引入，注意更新版本号\n\n```shell\n$ npm install eleme/h5-cartview#X.Y.Z\n```\n\n依赖 Vue 1.x 和 [web-cart](https://github.com/eleme/web-cart)\n\n使用 UMD 方式打包，请按环境支持的方式引入\n\n```javascript\n// ES6 module\nimport { CartView, CartButton } from 'h5-cartview';\n\n// CommonJS\nconst { CartView, CartButton } = require('h5-cartview');\n\n// Global variable\nconst { CartView, CartButton } = CartView;\n\n// AMD ...\n```\n\n在支持本库配置的开发环境中可以直接引用源码自行处理，比较方便调试\n\n```javascript\n// ES6 module\nimport { CartView, CartButton } from 'h5-cartview/src';\n\n// CommonJS\nconst { CartView, CartButton } = require('h5-cartview/src');\n```\n\n## Usage\n本库提供三个 Vue 组件，分别是：\n- 界面底部购物车本体 CartView\n- 操作购物车的按钮 CartButton\n- 多规格模态框 CartSpecPanel\n\nCartView 拥有如下 props 供配置\n\n```javascript\n// 对应商家 id 生成的 web-cart 对象\ncart: {\n  type: Object,\n  required: true,\n},\n// 当前编辑的篮子 (group) 索引\ngroupIndex: {\n  type: Number,\n  default: 0,\n},\n// 配送费\ndeliveryFree: {\n  type: Number,\n},\n// 餐盒费\npackingFree: {\n  type: Number,\n},\n// 购物车提交按钮的文本和可访问状态\nsubmitButton: {\n  type: Object,\n  default: {\n    disabled: true,\n    text: '去下单',\n  },\n},\n// 点击提交按钮的行为\nsubmit: {\n  type: Function,\n  default() {\n    console.info('DEFAULT SUBMITTING METHOD HAS BEEN CALLED.');\n  },\n},\n// 设置购物车点击不弹出的逻辑，默认在购物车没商品时不弹出\nnoToggle: {\n  type: Function,\n  default() {\n    return !this.cart.quantity;\n  },\n},\n// 设置是否有清空购物车按钮\nnoClear: {\n  type: Boolean,\n  default: false,\n},\n// 设置确认清空购物车函数，要求返回 Promise 对象\nconfirmClear: {\n  type: Function,\n  default() {\n    return Promise.resolve(true);\n  },\n},\n```\n\nCartButton 的 props 如下\n\n```javascript\n// 对应商家 id 生成的 web-cart 对象\ncart: {\n  type: Object,\n  required: true,\n},\n// 当前编辑的篮子 (group) 索引\ngroupIndex: {\n  type: Number,\n  default: 0,\n},\n// 当前商品的信息 （必须是包含 web-cart 需要的信息和商品库存 (stock) 的对象）\nmenuEntity: {\n  type: Object,\n  required: true,\n},\n// 设置确认删除购物车商品函数，要求返回 Promise 对象\nconfirmRemove: {\n  type: Function,\n  default() {\n    return Promise.resolve(true);\n  }\n},\n// 可选，需要加入购物车小球动画时传入小球飞入 DOM 的坐标对象 { top, left }\nflyPosition: {\n  type: Object,\n},\n```\n\n## Develop\n默认提供了 watching 和 hot reload\n由于默认的 8080 端口很易被占用，这里开发时需要自己随意指定一个未占用的端口\n\n```shell\n$ npm run dev --port { 自定义端口 }\n```\n\n远程调试可使用（需要先让自己的移动设备与本机相链接）\n\n```shell\n$ npm run remote-dev { 你的 IP 地址 }\n```\n\n使用 webpack 生成支持 UMD 的压缩版本\n\n```shell\n$ npm run build\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "webpack -p",
    "dev": "webpack-dev-server --config ./webpack.example.config.js --inline --hot --port",
    "remote-dev": "webpack-dev-server --config ./webpack.example.config.js --inline --hot --host"
  },
  "version": "0.4.1"
}
